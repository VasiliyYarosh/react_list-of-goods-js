{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","defSorting","method","isReversed","alphabet","length","App","useState","sortBy","setSortBy","goods","getGoods","sort","good1","good2","localeCompare","reverse","preparedGoods","className","type","onClick","classNames","map","good","ReactDOM","render","document","getElementById"],"mappings":"wPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAa,CACxBC,OAAQ,GACRC,YAAY,GAGRC,EAAW,WACXC,EAAS,SAoBR,IAAMC,EAAM,WACjB,MAA4BC,mBAASN,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KACMC,EApBR,SAAuBA,EAAvB,GAAuD,IAAvBR,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,WAChCQ,EAAQ,YAAOD,GAcrB,OAZIR,IAAWE,GACbO,EAASC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAGlDZ,IAAWG,GACbM,EAASC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMR,OAASS,EAAMT,UAGnDF,GACFQ,EAASK,UAGJL,EAKOM,CAAcjB,EAAiBQ,GAiB7C,OACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMX,EAAU,2BAAKD,GAAN,IAAcN,OAAQE,MAC9Cc,UACEG,IACE,SACA,UACA,CACE,WAAYb,EAAON,SAAWE,IARtC,iCAeA,wBACEe,KAAK,SACLC,QAAS,kBAAMX,EAAU,2BAAKD,GAAN,IAAcN,OAAQG,MAC9Ca,UACEG,IACE,SACA,aACA,CACE,WAAYb,EAAON,SAAWG,IARtC,4BAgBA,wBACEc,KAAK,SACLC,QA5Cc,WACpBX,EACED,EAAOL,WAAP,2BACSK,GADT,IACiBL,YAAY,IAD7B,2BAESK,GAFT,IAEiBL,YAAY,MAyCzBe,UAAWG,IACT,SACA,aACA,CACE,YAAab,EAAOL,aAP1B,sBAcEK,EAAON,QAAUM,EAAOL,aACxB,wBACEgB,KAAK,SACLC,QAlEiB,WACzBX,EAAU,CACRP,OAAQ,GACRC,YAAY,KAgENe,UAAU,4BAHZ,sBAUJ,6BACGR,EAAMY,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCzHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e0726944.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const defSorting = {\n  method: '',\n  isReversed: false,\n};\n\nconst alphabet = 'alphabet';\nconst length = 'length';\n\nfunction preparedGoods(goods, { method, isReversed }) {\n  const getGoods = [...goods];\n\n  if (method === alphabet) {\n    getGoods.sort((good1, good2) => good1.localeCompare(good2));\n  }\n\n  if (method === length) {\n    getGoods.sort((good1, good2) => good1.length - good2.length);\n  }\n\n  if (isReversed) {\n    getGoods.reverse();\n  }\n\n  return getGoods;\n}\n\nexport const App = () => {\n  const [sortBy, setSortBy] = useState(defSorting);\n  const goods = preparedGoods(goodsFromServer, sortBy);\n\n  const handleResetSorting = () => {\n    setSortBy({\n      method: '',\n      isReversed: false,\n    });\n  };\n\n  const handleReverse = () => {\n    setSortBy(\n      sortBy.isReversed\n        ? { ...sortBy, isReversed: false }\n        : { ...sortBy, isReversed: true },\n    );\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortBy({ ...sortBy, method: alphabet })}\n          className={\n            classNames(\n              'button',\n              'is-info',\n              {\n                'is-light': sortBy.method !== alphabet,\n              },\n            )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortBy({ ...sortBy, method: length })}\n          className={\n            classNames(\n              'button',\n              'is-success',\n              {\n                'is-light': sortBy.method !== length,\n              },\n            )\n          }\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={handleReverse}\n          className={classNames(\n            'button',\n            'is-warning',\n            {\n              'is-light': !sortBy.isReversed,\n            },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortBy.method || sortBy.isReversed) && (\n          <button\n            type=\"button\"\n            onClick={handleResetSorting}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}